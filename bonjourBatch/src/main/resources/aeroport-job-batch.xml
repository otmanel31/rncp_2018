<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/batch
			http://www.springframework.org/schema/batch/spring-batch-2.2.xsd"
			default-autowire="byName">

<import resource="database.xml"/>
<import resource="applicationContext.xml"/>

<!--  ce bean servira de stockage d'une ligne/vente en cours de traitement -->
<bean id="airport"
	  class="com.otmanel.bonjourBatch.beans.Airport"
	  scope="prototype" /> <!-- on lui dit de linstancier a chaque appel -> par default c un singleton -->

<bean id="customProcessor"
	  class="com.otmanel.bonjourBatch.beans.CustomItemProcessor" />

<batch:job id="myFirstJob">
	<batch:step id="step1">
		<batch:tasklet>
			<batch:chunk
				reader="csvFileItemReader"
				processor="customProcessor"
				writer="xmlItemWriter"
				commit-interval="5" /> <!-- combien de moerceau il traite en mm tps -->
		</batch:tasklet>
	</batch:step>
</batch:job>	

<!-- bean chargÃ© de la lecture du fichier csv en entree, et de sa conversion en item "vente" a traiter -->
<bean id="csvFileItemReader"
	  class="org.springframework.batch.item.file.FlatFileItemReader">
	  <property name="resource" value="classpath:csv/input/airports.csv"/> <!-- fichier entree -->
	  <property name="linesToSkip" value="1" /> <!--  skip header -->
	  <property name="lineMapper"> 
	  <!-- definit le bean qui va faire le mapping entre une ligne du fichier et la creation de lobjet aeroport -->
	  	<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
	  		<property name="lineTokenizer">
	  			<!--  decpoue ligne en morceaux  -->
	  			<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
	  				<!-- definition nomns des champs -->
	  				<property name="names" value="iata,nom,city,state,country,lattitude,longitude"/>
	  			</bean>
	  		</property>
	  		<property name="fieldSetMapper">
	  		<!--  objet charger a partir des champs extrait va instancier un aeroport -->
	  			<bean class="com.otmanel.bonjourBatch.beans.AeroportFieldSetMapper" />
	  		</property>
	  	</bean>
	  </property>
</bean>

<bean id="xmlItemWriter"
	  class="org.springframework.batch.item.xml.StaxEventItemWriter">
	  <property name="resource" value="file:rapport.xml"/>
	  <property name="rootTagName"  value="rapportAeroport" /> <!--  balise racine -->
	  <property name="marshaller"> <!-- c'est lui qui va aligner les elements les aiguiller -->
	  	<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller"> <!-- jaxb => javaxml binding soccupe de transcrire en xml -->
	  		<property name="classesToBeBound">
	  			<list>
	  				<value>com.otmanel.bonjourBatch.beans.Airport</value>
	  			</list>
	  		</property>
	  	</bean>
	  </property>
</bean>

</beans>
